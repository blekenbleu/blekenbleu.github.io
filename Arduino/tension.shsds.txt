{
  "AutomaticReconnect": true,
  "SerialPortName": "COM5",
  "IsConnecting": false,
  "IsEnabled": true,
  "LogIncomingData": true,
  "IsConnected": true,
  "BaudRate": 115200,
  "UpdateMessages": [
    {
      "Message": {
        "Expression": "format([OrientationYaw],0)+'\\t'+format([SpeedMph],0)+'\\t'+format([GlobalAccelerationG],0)+'\\r\\n'"
      },
      "IsEnabled": false,
      "MaximumFrequency": 0
    },
    {
      "Message": {
        "Interpreter": 1,
        "Expression": "var l = [$prop('Settings.LeftOffset')];\r\nvar r = [$prop('Settings.RightOffset')];\r\nconst zero = [0];\r\nconst one = [1];\r\nconst os = String.fromCharCode(one);\r\nconst zs = String.fromCharCode(zero);\r\nvar ls = String.fromCharCode.apply(String, l);\r\nvar rs = String.fromCharCode.apply(String, r);\r\nreturn zs.concat(ls,os,rs);"
      },
      "IsEnabled": true,
      "MaximumFrequency": 0
    },
    {
      "Message": {
        "Interpreter": 1,
        "Expression": "// Initialize history\r\nif(root[\"speed\"]==null){\r\n   root[\"speed\"] = $prop('SpeedMph');\r\n   root[\"delta_s\"] = 0;\r\n}\r\nif(root[\"yaw\"]==null){\r\n   root[\"yaw\"] = $prop('OrientationYaw');\r\n   root[\"delta_y\"] = 0;\r\n}\r\nvar s = $prop('SpeedMph');\r\nvar y = $prop('OrientationYaw');\r\nvar ds = s - root[\"speed\"];\r\nvar dy = y - root[\"yaw\"];\r\n\r\nif (ds > 0)     // we are only interested in deceleration\r\n     ds = 0;\r\nelse ds = - ds; // positive deceleration\r\n\r\nds = dy = .5\t// force something to test\r\n\r\nif (dy > 180) {  // yaw went +/- 180\r\n  if (root[\"yaw\"] > 150 || root[\"yaw\"] < -150)\r\n    dy = y + root[\"yaw\"];\r\n}\r\n\r\nvar Gy = Math.round($prop('Settings.yaw_gain')) * dy;\r\nvar Gs = Math.round($prop('Settings.decel_gain')) * ds;\r\nif (Math.abs(dy) > 2 && Math.abs(dy) > Math.abs(1.8 * root[\"delta_y\"]))\r\n  Gy /= 2;      // remove sampling artifacts\r\nif (ds > 2 && ds > 1.8 * root[\"delta_s\"])\r\n  Gs /= 2;      // remove sampling artifacts\r\n\r\n// store values for next increment\r\nroot[\"speed\"] = s;\r\nroot[\"yaw\"] = y;\r\nroot[\"delta_y\"] = dy;\r\nroot[\"delta_s\"] = ds;\r\n\r\n// convert from braking and delta yaw to left and right tension control values\r\nvar l = Gs - Gy;\r\nvar r = Gs + Gy;\r\nif (l > 126)\r\n  l = 126;\r\nelse if (l < 2)\r\n  l = 2;\r\nl &= 0x7E;      // left lsb is 0\r\nif (r > 127)\r\n  r = 127;\r\nelse if (r < 3)\r\n  r = 3;\r\nr |= 1;         // right lsb is 1\r\n\r\n// var ls = String.fromCharCode.apply(l);\t// tension control characters\r\n// var rs = String.fromCharCode.apply(r);\r\nvar ls = l.toString();\t// to debug, e.g. substitute s,y or ds,dy for l,r\r\nvar rs = r.toString();\r\n\r\nif ($prop('Settings.TestOffsets')) {\r\n  ls = String.fromCharCode.apply(126);\r\n  rs = String.fromCharCode.apply(127);\r\n  return ls.concat(rs);\r\n}\r\nelse\r\n  return ls.concat(' ', rs,'\\r\\n');\t// gnuplot columns for debugging"
      },
      "IsEnabled": true,
      "MaximumFrequency": 0
    }
  ],
  "OnConnectMessage": {
    "Expression": "' !'"
  },
  "OnDisconnectMessage": {
    "Expression": "' !'"
  },
  "DtrEnable": true,
  "RtsEnable": true,
  "EditorExpanded": true,
  "Name": "Custom Serial device",
  "Description": "Blue Pill belt servos",
  "LastErrorDate": "2021-02-02T18:44:28.5421518-05:00",
  "LastErrorMessage": null,
  "IsFreezed": false,
  "SettingsBuilder": {
    "Settings": [
      {
        "Maximum": 65,
        "Minimum": 0,
        "PropertyName": "LeftOffset",
        "CurrentValue": 65,
        "Name": null,
        "TypeName": "SliderEntry",
        "IsEnabled": true,
        "IsEnabledFormula": {
          "Expression": ""
        },
        "IsVisible": true,
        "Label": "Left tension",
        "IsVisibleFormula": {
          "Expression": ""
        }
      },
      {
        "Maximum": 65,
        "Minimum": 0,
        "PropertyName": "RightOffset",
        "CurrentValue": 60,
        "Name": null,
        "TypeName": "SliderEntry",
        "IsEnabled": true,
        "IsEnabledFormula": {
          "Expression": ""
        },
        "IsVisible": true,
        "Label": "Right tension",
        "IsVisibleFormula": {
          "Expression": ""
        }
      },
      {
        "PropertyName": "TestOffsets",
        "CurrentValue": false,
        "Name": null,
        "TypeName": "BoolEntry",
        "IsEnabled": true,
        "IsEnabledFormula": {
          "Expression": ""
        },
        "IsVisible": true,
        "Label": "Test tension",
        "IsVisibleFormula": {
          "Expression": ""
        }
      },
      {
        "Maximum": 250,
        "Minimum": 0,
        "PropertyName": "decel_gain",
        "CurrentValue": 118,
        "Name": null,
        "TypeName": "SliderEntry",
        "IsEnabled": true,
        "IsEnabledFormula": {
          "Expression": ""
        },
        "IsVisible": true,
        "Label": "decel gain",
        "IsVisibleFormula": {
          "Expression": ""
        }
      },
      {
        "Maximum": 200,
        "Minimum": 0,
        "PropertyName": "yaw_gain",
        "CurrentValue": 37,
        "Name": null,
        "TypeName": "SliderEntry",
        "IsEnabled": true,
        "IsEnabledFormula": {
          "Expression": ""
        },
        "IsVisible": true,
        "Label": "delta yaw gain",
        "IsVisibleFormula": {
          "Expression": ""
        }
      }
    ],
    "IsEditMode": false
  }
}
