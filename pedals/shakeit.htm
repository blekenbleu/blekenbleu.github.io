<html><head>
<link rel='stylesheet' type='text/css' href='../../static/my.css'>

<title>ShakeIt profiles</title>
<style>
table.my_table td { width:880px; }
</style>
</head>

<body>
<div align=center>
<table class="my_table"><tr><td>

<font size=-1><a href="index.htm#ShakeIt"><i>back</i></a></font>
<h2>SimHub ShakeIt Bass Shaker profiles</h2>
<font size=+1>
<sl>
<li><a href="#intro">Introduction</a>
<li><a href="#prof">Profiles</a>
<li><a href="ShakeIt/index.htm">Formulae</a>
<li><a href="ShakeIt/index.htm#gp">property portability</a>
<li><a href="ShakeIt/index.htm#tp">telemetry proxies</a>
</sl>

<a name=intro>
<h3>Introduction</h3></a>
Bass Shaker effects are output as audio signals, contrasted to rumble motors via Arduino.<br>
As of 25 Sep 2021, my SimHub had 28 Any Game, 1 RaceRoom and 2 Assetto Corsa profiles.<br>
This does not mean that 28 profiles work well with any game supported by SimHub;<br>
merely that 1 depends on a property unique to RR and 2 use AC-unique properties.<br>
That profile count was expected to drop while documenting,<br>
with duplicates pruned and others consolidated,<br>
since these employ less than 2 dozen usefully unique effects.<br>
(14 Mar 2024:&nbsp now ShakeIt 52 profiles;&nbsp so much for intentions)<br>
<br>
A SimHub effect may generate haptic outputs, custom properties or both.<br>
Custom haptic effects typically depend on two or more properties,<br>
each of which may involve 4 formulae, one for each wheel.<br>
Typically, JavaScript for only one formula (corner) of a custom property will be documented,<br>
with the other 3 hopefully obvious by symmetry.<br>
Several <i>different</i> formulae may share the <i>same custom property name</i>,<br>
exploiting different SimHub properties available in various versions for various games.<br>
Among the many profiles are often multiple variations on the same formula,<br>
some of which should be reduced to a single best version by the completion of this document,<br>
but others address different tranducers, sims, tracks, cars, driving styles and preferences.<br>
<br>
My main interest in haptic effects is for driving aids,<br>
in other words, more warnings <i>before</i> control is lost.<br>
My haptic transducers are small and generally dedicated to single effects.<br>
For example, 4 wheel loaded wheel slips feed 4 Dayton pucks in a seat cushion.<br>

<br><div align=center>link for <a href=tires.htm>tire haptics discussion</a></div><br>

Others may wish to repurpose and mix effects for more elaborate configurations,<br>
which would likely want substantially different (e.g. frequency) settings.

<a name=prof>
<h3>Profiles</h3></a>
Many of these are based on obsolete SimHub versions which lack many current properties.<br>
For example, ProxyS effects <i>should</i> disappear.
<dl>
<dt><br><b>Default profile</b> 17 effects (then, 22 as of 14 Mar 2024)
<dd>ShakeIt plugin as initially received; only RPM was IMO interesting as provided.<br>
That feeds a small shaker attached to dead pedal (foot rest left of clutch).

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/AC1.siprofile"><b>AC1</b></a> 2 effects
<dd>prune of provided Default, leaving only WHEELS SLIPS and RPMS

<a name=u4ssc><dt><br>AC-specific <b>(un)Loaded 4-Wheel Slips with Speed Curving</b> (no longer available)</a>
<dd><font size=-2><i>Uses some proprietary Assetto Corsa properties</i><br></font>
<a href=ShakeIt/index.htm#ACproxyL>ACproxyL</a>,<br>
<a href=ShakeIt/index.htm#ACproxyS>ACproxyS</a>,<br>
<a href="ShakeIt/index.htm#LWS"<i>loaded wheel slips</i></a> haptic effect,<br>
<a href=ShakeIt/index.htm#OS><i>trailing oversteer</i></a> haptic effect,<br>
generic SPEED WITH CURVING exports <code>SpeedCurv</code> property to custom serial PWM fan.

<dt><br><b>Brake Runout, Road Noise</b> 2 output effects for mixing to a single haptic channel
<dd>While <i>real</i> ABS helps, SimHub's effect activates IMO too late to aid a braking.<br>
Instead, a first effect simulates some rotor runout for light braking,<br>
progressing to a second, road noise effect for moderate pressure.<br>
In real life, brake pedal feel becomes dead when wheels lock.<br>
High pressures reduces foot sensitivity to moderate haptics, and<br>
generating powerfule haptic stimulae can overheat transducers; ask me how I know.<br>
<a href=ShakeIt/index.htm#B>Current implemention</a> is
binary (thresholded <code>Brake</code> property);<br>
should probably be proportional (piece-wise linear).

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Assetto%20Corsa%20-%20Loaded_WheelSlip9.1.20.siprofile"><b>Assetto Corsa - Loaded_WheelSlip9.1.20</b></a>
  discussed <a href=https://www.racedepartment.com/threads/simhub-shakeit-bass-shakers-custom-4-corner-tire-slip.198455/post-3739847>here</a><br>
<dd>SimHub 9.1.20 added <code>Forced Frequencies</code> to CUSTOM EFFECT, and AC has <code>GameRawData.Physics.WheelLoad0x</code> telemetry properties,<br>
    allowing this a simple low overhead profile for loaded wheel slip simulating tire squeal<br> to shudder based on increasing slip, with amplitude based on tire load (no load = no tactile)
<dt><br> <a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/GmodulatedWheelSlip.siprofile.txt><b>SimHub ShakeIt Bass Shakers custom 4 corner tire slip</b></a>
<dd> <i>updated to</i> <a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/Any%20Game%20-%204-channel%20wheelslip%20-%20CUSTOM%20Forced%20Frequency.siprofile><code>Forced Frequencies</code></a>
   AKA <a href=https://www.racedepartment.com/threads/simhub-shakeit-bass-shakers-custom-4-corner-tire-slip.198455/>GmodulatedWheelSlip.siprofile.txt</a>
   and <a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/GmodulatedWheelSlip.siprofile>the orginal</a>, as described <a href=./#Simshakeseat>here</a>.
<a name=sierses>
<dt></a><br><a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/sierses_4-channel_wheelslip.siprofile><b>sierses_4-channel_wheelslip.siprofile</b></a>
<dd> - <i>updated to</i>: <a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/Any%20Game%20-%204-channel%20wheelslip%20mix%20-%20CUSTOM%20Forced%20Frequency.siprofile>Forced Frequency squeal-shudder</a>
<ul><li> based on <a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/NewLoaded4-chanWheelslipUndersteer.siprofile>NewLoaded4-chanWheelslipUndersteer.siprofile</a>
<li>wrapped effects in an embedded GroupContainer<ul>
    <li>custom effects for property AbsAcc from abs AccelerationSway, Surge
    <li>custom effects for property proxyL, based on Abs.Acc
    <li>proxyS properties exported from Wheels Slip effect
    <li>custom effect generates proxyL * proxyS / 100
    <li>custom effect for under, <a href=../SimHub/Oversteer>oversteer</a> properties (and outputs) from proxyS front-rear differences * AbsAcc
    <li>custom effect generates mixes of oversteer and loaded <../SimHub/slip.htm>slips</ul></ul>

<a name=rrrels><dt><br><a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/RaceRoom%20Racing%20Experience%20-%20LoadedTireSlip.siprofile><b>RRRE LoadedTireSlip</b></a> 1 effect</a>
<dd>Although I rarely play it, RaceRoom Racing Experience is "interesting" because it provides<ul>
<li>NewRawData().TireLoad
<li>$prop('GameRawData.TireGrip.RearLeft');</ul>
This pair of properties may be what elsewhere are being estimated for loaded slip...<pre>
	// approximate average tire load
	root['load'] = NewRawData().TireLoad.RearLeft 

	function load(tire)
	{
		root['load'] += (tire - root['load']) / 100; // smoothed tire load
		return tire / root['load'];
	}
	//			 __________________slip ____________________
	return 100 * (1 - $prop('GameRawData.TireGrip.RearLeft')) * load(NewRawData().TireLoad.RearLeft);
</pre>

<dt><br><a href=https://github.com/blekenbleu/SimHub-Profiles/blob/main/NewLoaded4-chanWheelslipUndersteer.siprofile><b>NewLoaded4-chanWheelslipUndersteer.siprofile</b></a>
<dd>from <a href=#rrrel>RRRELoaded4-chanWheelslipUndersteer</a>
<dd>    same effects as above<ul>
<li> <i>14 Aug 2021</i> accelerations applied to slip differences for under/oversteer<br> were all wrong
<li> <b>to do</b>: replace AbsAcc custom effect with G-Forces effects</ul>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Aug14Loaded4-chanWheelslipUndersteer.siprofile"><b>Aug14Loaded4-chanWheelslipUndersteer</b></a> 6 effects
<dd>also derived from <a href=#rrrel>RangeyRover</a><ul compact>
<li><a href=ShakeIt/index.htm#AA>AbsAcc</a>
<li><a href=ShakeIt/index.htm#AAL>load from AbsAcc</a>
<li><code>proxyS</code> from WHEELS SLIP</a>
<li><a href=ShakeIt/index.htm#LWS>Loaded WheelSlip</a>
<li><a href=ShakeIt/index.htm#GUOS>gated under, oversteer</a>
<li><a href=ShakeIt/index.htm#mix>mix slips and oversteer</a></ul>
<i>mix slips and oversteer</i> disabled, output <code>LoadedSlip</code>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Aug19Loaded4-chanWheelslipUndersteer.siprofile"><b>Aug19Loaded4-chanWheelslipUndersteer</b></a> groups 3 telemetery effects + 2 outputs
<dd>non-output telemetery effects group:<ul compact>
<li><a href=ShakeIt/index.htm#AA>AbsAcc</a>,
<li><a href=ShakeIt/index.htm#AAL>load from AbsAcc</a> 
<li><code>proxyS</code> from WHEELS SLIP</a></ul>
output effects:&nbsp <a href=ShakeIt/index.htm#LWS>Loaded WheelSlip</a>, &nbsp
<a href=ShakeIt/index.htm#GUOS>gated under/oversteer</a> 

<a name=gsr>
<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Any%20Game%20-%20gated%20speed_rpm%20shift%20.siprofile"><b>gated speed/rpm shift</b></a> 2 effects</a>
<dd><a href=Shakeit/JS.htm#iirH><code>iirH</code></a> high pass filter applied to speed/rpm.<br>
Gated by SimHub GEAR SHIFT effect property to mitigate false haptics e.g. from wheel slip.<br>
SimHub GEAR SHIFT fails to pulse for some shifts...

<dt><br><a href=ShakeIt/index.htm#joy><b>joystick telemetry</b></a> 2 effects
<dd>output based on SideWinder slider when button 7 is pressed<br>
ROAD IMPACTS (curiosity?)

<a name=dMASS>
<dt><br></a><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Automobilista%202%20-%20dMASS%20Loaded%20Slip%20-%20tweaked%20gate%2C%20Forced%20Frequency.siprofile"><b>dMASS tweaked wheelslip</b></a> &nbsp <i>3 Feb 2024</i>
<dd><i>Loaded Slip</i> group, tweaked for Automobilista 2<ul>
<li>CUSTOM EFFECT <i>AbsAcc</i> - used in CUSTOM EFFECT <i>proxyL</i>
<li>CUSTOM EFFECT <i>proxyL</i> - simulates load on each wheel
<li>WHEELS SLIP <i>ProxyS</i> - conditions wheelslip to control tire squeal
<li>WHEELS SLIP <i>gate</i> - mutes tire squeal for small slippages
<li>CUSTOM EFFECT <i>noisy: frequencies</i><br> - for <i>output loaded wheel slips</i> <code>Forced Frequencies</code>.<br>
  Applies noise and minimum frequency to <i>ProxyS</i>.<br>
  Formulae could move to <i>output loaded wheel slips</i> <code>Forced Frequencies</code>,<br> &nbsp if no need to tweak Gamma or Minimum Force
<li>CUSTOM EFFECT <i>output loaded wheel slips</i>:<br> - <i>gate</i> <code>*</code> <i>proxyL</i> modulates amplitude;<br>
  - <i>noisy</i> modulates tire squeal-&gt;shudder frequency.<br>
</ul>
<details><summary><b>Adjustments</b></summary>
All but the last are properties, which are constrained by SimHub to be >= 0 and <= 100<ul>
<li>CUSTOM EFFECT <i>AbsAcc</i> <code>Gamma Factor</code> controls load transfers among wheels
<li>CUSTOM EFFECT <i>proxyL</i> <code>Gamma Factor, Input Gain</code> control how soon max amplitude occurs
<li>WHEELS SLIP <i>ProxyS</i> <code>Threshold, Input Gain</code><br> control how much slip to ignore and how much gain to apply to slip telemetry
<li>WHEELS SLIP <i>gate</i> <code>Gamma Factor, Threshold, Input Gain</code><br> mutes high frequency haptic below <code>Threshold</code>
<li>CUSTOM EFFECT <i>noisy: frequencies</i> <code>Gamma Factor, Minimum Force</code><br>
    NCalc formulae may need tweaking; <code>Minimum Force</code> controls minimum haptic frequency.<br>
    Lower <code>Gamma</code> reduces frequencies for more slip and haptic sensing.
<li>CUSTOM EFFECT <i>output loaded wheel slips</i> generates haptic signals;<ul>
<li><code>ShakeITBSV3Plugin.Export.noisy.*</code> are constrained 0 to 100 by SimHub
<li><code>9*[ShakeITBSV3Plugin.Export.noisy.*]</code><br> thus constrains Forced Frequencies between <code>9*</code><i>noisy</i> <code>Minimum Force</code> and 900(Hz)
</ul></ul></details>

<a name=S/G>
<dt><br></a><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/LoadedSlipGrip.siprofile"><b>Loaded Slip/Grip</b></a> &nbsp <i>14 Mar 2024</i>
<dd><a href=ShakeIt/SG.htm><i>Discussion</i></a><br>
Earlier profiles used <code>GlobalAccelerationG</code>, which turns out to be only surge.<br>
This profile generates CUSTOM effect with 2D horizontal acceleration,<br> to better complement 2D <i>wslip</i>.<ul>
<li>CUSTOM EFFECT <i>Haccel</i>;&nbsp <i>Min</i> and <i>Max/10</i> for <i>output</i> Forced Frequencies<br>
	<i>Haccel</i> is proxy for <i>Grip</i>
<li>WHEELS SLIP exports <i>wslip</i> - wheelslip conditioned for <i>slip/grip</i>
<li>CUSTOM EFFECT <i>slip/grip</i><ul>
	<li>estimates wheel loads from heave, sway and surge
	<li>applies wheel loads to <i>Haccel</i> as grip proxy
	<li>forces some minimum grip to avoid divide by zero when no horizontal acceleration
	<li>divides <i>wslip</i> by this grip proxy
	</ul>

<li>CUSTOM EFFECT <i>AC slip/grip</i><ul>
<li>employs Assetto Corsa-specific <code>GameRawData.Physics.WheelLoad</code> instead of estimating</ul>

<li>CUSTOM EFFECT <i>output:&nbsp loaded wheel slips</i> haptic signals:<ul>
<li><code>proxyL()</code> wheel load calculations are now integrated here<br>
<li><code>SlipGate() mutes output for low slip<br>
 &nbsp <img width=80% src=image/figure8_loads.png><br>
  &nbsp  &nbsp estimated wheel load examples on
 <a href="https://www.racedepartment.com/downloads/clarksville-indiana_sportsdome-speedway_figure-8-oval.28318/">figure 8 track</a></i><br><br>
<li><b>Forced Frequencies</b> apply <code>noisy()</code> to <i>slip/grip</i><br> rescaled by <code>low</code> and <code>high</code><br>
	 to frequency modulate tire squeal-&gt;moan-&gt;judder.<br>
</ul>
</ul>
<details><summary><b>Adjustments</b></summary>
<i>Haccel</i>, <i>wslip</i> and <i>slip/grip</i> are properties, constrained by SimHub to be >= 0 and <= 100<ul>
<li><i>Haccel</i> Rear left and right set <i>output</i> Min and Max/10 Force Frequencies
<li>WHEELS SLIP <i>wslip</i>:&nbsp perhaps tweak <code>Threshold, Gamma, Input Gain</code><br> to change how much slip to ignore and avoid clipping at 100
<li>CUSTOM EFFECT <i>slip/grip</i>:&nbsp reduce input gain to avoid clipping @ 100;
<br> <a href=SGgamma.htm>increase gamma to increase average haptic activity</a>
<li>CUSTOM EFFECT <i>output</i>:&nbsp increase <code>Threshold</code> to mute weak slip 
</ul></details>

<a name=Slip/G>
<dt><br></a><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Any%20Game%20-%20Loaded%20Slip_G%20-%20gated%20Frequency.siprofile"><b>Loaded Slip/G</b></a> &nbsp <i>9 Feb 2024</i>

&nbsp &nbsp link for <a href=tires.htm>tire haptics discussion</a><br>

<dd><i>Loaded Slip</i> group, tested with AC and Automobilista 2 replays<ul>
<li><i>ProxyS</i> - conditions wheelslip for <i>ProxySG</i>
<li>CUSTOM EFFECT <i>noisy</i><ul>
<li><code>SG()</code>: converts <i>ProxyS</i> to <code>slip/grip</code> <i>ratio</i>, instead of <code>slip</code><br>
<li><code>function SG(s,g) { return 100-Math.min(100,Math.abs(.5*s/Math.max(.1,Math.abs(g)))) };</code><br>
 - for <i>output</i> <code>gate</code> and <i>noisy</i> <code>noise()</code>
<li><code>noise()</code>: converts <code>SG()</code> output to frequency control range 0 to 100
<li><code>function noise(sg) { return f * (sg + Math.random() * (1 + sg / n)) };</code></ul>

<li>CUSTOM EFFECT <i>output loaded wheel slips</i> haptic signals:<br>
 - <i>proxyL</i> wheel load calculations are now integrated here<br>
 - <code>gate(SG) * </code> <i>proxyL</i> modulates amplitude:<br>
 &nbsp <img width=80% src=image/figure8_loads.png><br>
  &nbsp  &nbsp <i>estimated wheel load examples on
 <a href="https://www.racedepartment.com/downloads/clarksville-indiana_sportsdome-speedway_figure-8-oval.28318/">figure 8 track</a></i><br><br>
 - <code>noisy(<i>slip/grip</i>)</code>, rescaled by <code>Min</code> and <code>10 *Max/10</code>, frequency modulates tire squeal-&gt;moan-&gt;judder.<br>
</ul>
<details><summary><b>Adjustments</b></summary>
<i>ProxyS</i> and <i>noisy</i> are properties, constrained by SimHub to be >= 0 and <= 100<ul>
<li>WHEELS SLIP <i>ProxyS</i>:&nbsp perhaps tweak <code>Threshold, Input Gain</code><br> control how much slip to ignore and how much to boost slip telemetry
<li>CUSTOM EFFECT <i>noisy</i>:&nbsp perhaps tweak <code>Gamma, Input Gain</code><br> alter tire haptic transitions from squeal to moan to judder
<li>CUSTOM EFFECT <i>output</i> Forced Frequencies<br>
    - <code>low</code> is low frequency limit<br>
    - <code>high</code> is high frequency limit<br>
 &nbsp In this example, low frequency limit is <code>25Hz</code> and upper frequency limit is <code>1000Hz</code>:<br>
  &nbsp <img src=image/limit25.png><br>
</ul></details>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Loaded4-chanWheelslipsUndersteer.siprofile"><b>Loaded4-chanWheelSlipsUndersteer</b></a> 7 effects
<dd>(unused) <a href=ShakeIt/index.htm#YSG><code>proxy_G</code> from Yaw, Speed</a>,<br>
<a href=ShakeIt/index.htm#G><code>proxyG</code> from
 <code>AccelerationSurge, AccelerationSway</code></a>,<br>
<a href=ShakeIt/index.htm#GL><code>proxyL</code> from <code>proxyG</code></a>,<br>
<code>proxyS</code> from WHEELS SLIP effect,<br>
<a href=ShakeIt/index.htm#LWS>Loaded WheelSlip</a>,<br>
<a href=ShakeIt/index.htm#UOS>unloaded under, oversteer from <code>proxyG</code> and <code>proxyS</code></a>,<br>
(unused)<a href=ShakeIt/index.htm#mix>mix slips and oversteer</a>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/NewLoaded4-chanWheelslipUndersteer.siprofile"><b>Loaded4-chanWheelslipUndersteer</b></a> 7 effects
<dd><i>unused</i> <a href=ShakeIt/index.htm#YSG><code>proxy_G</code> from
<code>OrientationYaw</code> and <code>SpeedKmh</code></a>,<br>
<a href=ShakeIt/index.htm#AA><code>AbsAcc</code> from
<code>AccelerationSway</code> and <code>AccelerationSurge</code></a>,<br>
<a href=ShakeIt/index.htm#AAL><code>proxyL</code> from <code>AccelerationSway</code>,
 <code>AccelerationSurge</code> and <code>AbsAcc</code></a>,<br>
<code>proxyS</code> from WHEELS SLIP,<br>
<a href=ShakeIt/index.htm#LWS><code>LoadedWheelSlip</code> from <code>proxyL</code> and <code>proxyS</code></a>,<br>
<a href=ShakeIt/index.htm#UOS><code>UnderOversteer</code> from <code>proxyS</code> and <code>AbsAcc</code></a>,<br>
<a href=ShakeIt/index.htm#mix><i>mix slips and oversteer</i> from
 <code>UnderOversteer</code>, <code>proxyS</code> and <code>LoadedSlip</code></a>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Loaded4-WheelSlips.siprofile"><b>(un)Loaded 4-Wheel Slips</b></a> 4 effects
<dd><a href="ShakeIt/index.htm#ACproxy_G">AC_proxy_G</a>,<br>
<a href=ShakeIt/index.htm#ACproxyS>AC proxyS</a>,<br>
Loaded slips by combined(<a href=ShakeIt/index.htm#GL>proxyL</a>
and <a href=ShakeIt/index.htm#LWS>Loaded WheelSlip</a>),<br>
<a href=ShakeIt/index.htm#GOS>Unloaded WheelSlip (trailing oversteer) from proxy_G</a>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/portable_Loaded4WheelSlipsgroup.siprofile"><b>portable Loaded 4-Wheel Slips group</b></a> 1 group w/7 effects
<dd><a href=ShakeIt/index.htm#G><code>proxyG</code> from
 <code>AccelerationSurge, AccelerationSway</code></a>,<br>
<code>proxyS</code> from WHEELS SLIP effect,<br>
<a href=ShakeIt/index.htm#GL><code>proxyL</code> from <code>proxyG</code></a>
 or <code>GameRawData.Physics.WheelLoad</code>,<br>
<a href=ShakeIt/index.htm#LWS><code>proxyLS</code> Loaded WheelSlip</a>,<br>
<a href=ShakeIt/index.htm#GOS>Unloaded rear WheelSlip (trailing  oversteer)</a>,<br>
<a href=ShakeIt/index.htm#LOU>Loaded over, understeer from <code>proxyLS</code>,<br>
<a href=ShakeIt/speedshift.js>haptic output based on speed changes during shifts and clutch releases</a>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/ShiftRPMeffects.siprofile"><b>RPM-modulated up/downshifts</b></a> 3 effects
<dd><a href="https://www.racedepartment.com/threads/tactile-immersion-general-discussion-hardware-software.137631/page-197#post-3357575">by request</a>

<a name=rrrel><dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/RaceRoom%20Racing%20Experience%20-%20RRShakers.siprofile"><b>RRRELoaded4-chanWheelslipUndersteer</b></a> 6 effects</a>
<dd>from <a href="https://www.racedepartment.com/threads/simhub-shakeit-bass-shakers-custom-4-corner-tire-slip.198455/page-4#post-3427571">RangeyRover</a>
<dd>hacked front left;

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/SpeedShiftsGrp.siprofile"><b>speed shifts</b></a>
<dd>Tactile effect for shifts should IMO reflect shift smoothness,<br>
which presumably corresponds in speed changes during those shifts.
<details><summary>click for details</summary>
This effect currently explores three formulae, each gated by gear changes and clutch releases:<ul compact>
<li>high-pass filtering of changes in speed
<li>surge acceleration
<li>surge acceleration and high-pass filtering of same (jerk)</ul>
<img src="image/shifts.gif"><br clear=all>
<font size=-1>
<i>Front left = Gear; Front right = surge acceleration; Rear left = high pass filter of speed changes;<br>
Rear right = surge acceleration + high pass filter of acceleration changes</i><br></font><br>
Since <code>Rear left</code> is nearly a recalculation of <code>Front right</code>,
results differ surprisingly..<br>
As a reminder, to derive acceleration from speed samples, one typically<br>
subtracts the previous speed value from the current value,<br>
then optionally low-pass filters those differences,<br>
instead of subtracting low-pass filtered previous samples from current samples.<br>
However, rough shifts interest is more for sudden changes than long-term accuracy.<br>
Minimizing errors between methods involves tedious juggling of gains and filtering factors.<br>
Here are two plots evaluating methods, gated neither by gear changes nor clutch releases:<ul compact>
<li><code>Front left</code> is <code>SpeedKmh</code>
<li><code>Front right</code> is <code>AccelerationSurge</code> property
<li><code>Rear left</code> is current speed minus <a href=ShakeIt/index.htm#lpiir>low-pass filtered</a> previous speeds
<li><code>Rear right</code> is <a href=ShakeIt/index.htm#hpiir>high-pass filtered</a> accelerations</ul>
<img src="image/plot1.gif"><br clear=all>
This next plot is when braking with front tire lockup, a limit condition:<br>
<img src="image/plot2.gif"><br clear=all>
The low pass time constant determined to roughly minimize<br>
differences between <code>Front right</code> and <code>Rear left</code>
was then also applied to <code>Rear right</code>.</details>

<dt><br><a href="https://github.com/blekenbleu/SimHub-Profiles/blob/main/Schnirbus%20experimental%20slip.siprofile"><b>Schnirbus tweaked slip</b></a>
<dd><i>Experimental 4-corner Wheelslip for iRacing</i> group (4 effects, 1 output),<ul compact>
<li><code>wslip</code> from WHEELS SLIP
<li><code>sideways</code> from SPEED WITH CURVING <i>only generate in turns</i>
<li><code>long shift</code> from <code>GameRawData.Telemetry.LongAccel</code>
<li><i>4-Corner Slip output</i> from <code>wslip</code>, <code>sideways</code> and <code>long shift</code>
</ul>

</dl>
</font>

</td></tr><tr><td align=center>
maintained by <a href="https://github.com/blekenbleu">blekenbleu</a><br>
</td></tr></table></div>

</body></html>
